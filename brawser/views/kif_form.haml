-# .well
-#   - Bushido::XtraPattern.each.with_index do |pattern, id|
-#     %a{:href => "/tactics?id=#{id}"}= "【#{pattern[:title]}】"

%form{action: "/kif_form", method: "get", :class => "form-vertical"}
  .control-group
    %label{:class => "control-label"}= "タイトル"
    .controls
      %input{type: "text", :name => "kif_title", :value => params[:kif_title], :class => "input-xxlarge"}
  .control-group
    %label{:class => "control-label"}= "棋譜データ"
    .controls
      %tt
        %textarea{:name => "kif_body", :class => "input-xxlarge", :rows => [10, params[:kif_body].to_s.lines.count].max, :style => "font-family:monospace"}
          = preserve do
            = params[:kif_body]
  .form-actions
    %input{type: "submit", value: "実行", :class => "btn btn-primary"}

- if @pattern
  %p
    %strong= @pattern[:title]
  - if @pattern[:url]
    %p
      %a{href: @pattern[:url]}
        = @pattern[:url]
  - if @pattern[:comment]
    %p
      = @pattern[:comment]
  %hr
  - @frames.each do |mediator|
    - if v = mediator.variables[:comment]
      .alert
        = v
    - if mediator.variables[:hide_human_kif_logs]
    - else
      %p= mediator.human_kif_logs.join(" ")
    - if mediator.player_at(:white).pieces.present?
      .pieces= mediator.player_at(:white).to_s_pieces
    = MediatorDecorator.new(mediator).to_html_board(:small)
    - if mediator.player_at(:black).pieces.present?
      .pieces= mediator.player_at(:black).to_s_pieces
    %hr
